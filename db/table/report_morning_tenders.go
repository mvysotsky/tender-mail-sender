//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ReportMorningTenders = newReportMorningTendersTable("newtendex", "report_morning_tenders", "")

type reportMorningTendersTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnInteger
	Date      mysql.ColumnTimestamp
	TenderIds mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ReportMorningTendersTable struct {
	reportMorningTendersTable

	NEW reportMorningTendersTable
}

// AS creates new ReportMorningTendersTable with assigned alias
func (a ReportMorningTendersTable) AS(alias string) *ReportMorningTendersTable {
	return newReportMorningTendersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ReportMorningTendersTable with assigned schema name
func (a ReportMorningTendersTable) FromSchema(schemaName string) *ReportMorningTendersTable {
	return newReportMorningTendersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ReportMorningTendersTable with assigned table prefix
func (a ReportMorningTendersTable) WithPrefix(prefix string) *ReportMorningTendersTable {
	return newReportMorningTendersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ReportMorningTendersTable with assigned table suffix
func (a ReportMorningTendersTable) WithSuffix(suffix string) *ReportMorningTendersTable {
	return newReportMorningTendersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newReportMorningTendersTable(schemaName, tableName, alias string) *ReportMorningTendersTable {
	return &ReportMorningTendersTable{
		reportMorningTendersTable: newReportMorningTendersTableImpl(schemaName, tableName, alias),
		NEW:                       newReportMorningTendersTableImpl("", "new", ""),
	}
}

func newReportMorningTendersTableImpl(schemaName, tableName, alias string) reportMorningTendersTable {
	var (
		IDColumn        = mysql.IntegerColumn("id")
		DateColumn      = mysql.TimestampColumn("date")
		TenderIdsColumn = mysql.StringColumn("tender_ids")
		allColumns      = mysql.ColumnList{IDColumn, DateColumn, TenderIdsColumn}
		mutableColumns  = mysql.ColumnList{DateColumn, TenderIdsColumn}
	)

	return reportMorningTendersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Date:      DateColumn,
		TenderIds: TenderIdsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
