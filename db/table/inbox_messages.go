//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var InboxMessages = newInboxMessagesTable("newtendex", "inbox_messages", "")

type inboxMessagesTable struct {
	mysql.Table

	// Columns
	ID            mysql.ColumnInteger
	MessageBodyID mysql.ColumnInteger
	UserSender    mysql.ColumnInteger
	UserRecipient mysql.ColumnInteger
	Status        mysql.ColumnInteger // 1 - Новое, 2- Прочитано
	DateRead      mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type InboxMessagesTable struct {
	inboxMessagesTable

	NEW inboxMessagesTable
}

// AS creates new InboxMessagesTable with assigned alias
func (a InboxMessagesTable) AS(alias string) *InboxMessagesTable {
	return newInboxMessagesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InboxMessagesTable with assigned schema name
func (a InboxMessagesTable) FromSchema(schemaName string) *InboxMessagesTable {
	return newInboxMessagesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new InboxMessagesTable with assigned table prefix
func (a InboxMessagesTable) WithPrefix(prefix string) *InboxMessagesTable {
	return newInboxMessagesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new InboxMessagesTable with assigned table suffix
func (a InboxMessagesTable) WithSuffix(suffix string) *InboxMessagesTable {
	return newInboxMessagesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newInboxMessagesTable(schemaName, tableName, alias string) *InboxMessagesTable {
	return &InboxMessagesTable{
		inboxMessagesTable: newInboxMessagesTableImpl(schemaName, tableName, alias),
		NEW:                newInboxMessagesTableImpl("", "new", ""),
	}
}

func newInboxMessagesTableImpl(schemaName, tableName, alias string) inboxMessagesTable {
	var (
		IDColumn            = mysql.IntegerColumn("id")
		MessageBodyIDColumn = mysql.IntegerColumn("message_body_id")
		UserSenderColumn    = mysql.IntegerColumn("user_sender")
		UserRecipientColumn = mysql.IntegerColumn("user_recipient")
		StatusColumn        = mysql.IntegerColumn("status")
		DateReadColumn      = mysql.TimestampColumn("date_read")
		allColumns          = mysql.ColumnList{IDColumn, MessageBodyIDColumn, UserSenderColumn, UserRecipientColumn, StatusColumn, DateReadColumn}
		mutableColumns      = mysql.ColumnList{MessageBodyIDColumn, UserSenderColumn, UserRecipientColumn, StatusColumn, DateReadColumn}
	)

	return inboxMessagesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:            IDColumn,
		MessageBodyID: MessageBodyIDColumn,
		UserSender:    UserSenderColumn,
		UserRecipient: UserRecipientColumn,
		Status:        StatusColumn,
		DateRead:      DateReadColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
