//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Users = newUsersTable("newtendex", "users", "")

type usersTable struct {
	mysql.Table

	// Columns
	ID               mysql.ColumnInteger
	AccountID        mysql.ColumnInteger
	RoleID           mysql.ColumnInteger
	Name             mysql.ColumnString
	Email            mysql.ColumnString
	Phone            mysql.ColumnString
	Login            mysql.ColumnString
	Password         mysql.ColumnString
	Enabled          mysql.ColumnInteger // 0 - Выключен, 1 - Включен
	DateLastLogin    mysql.ColumnTimestamp
	DateSendPassword mysql.ColumnTimestamp
	UserEdit         mysql.ColumnInteger
	DateAdd          mysql.ColumnTimestamp
	DateEdit         mysql.ColumnTimestamp
	SystemRoleID     mysql.ColumnInteger
	ReportsViewer    mysql.ColumnBool
	ReportsSettings  mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type UsersTable struct {
	usersTable

	NEW usersTable
}

// AS creates new UsersTable with assigned alias
func (a UsersTable) AS(alias string) *UsersTable {
	return newUsersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UsersTable with assigned schema name
func (a UsersTable) FromSchema(schemaName string) *UsersTable {
	return newUsersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UsersTable with assigned table prefix
func (a UsersTable) WithPrefix(prefix string) *UsersTable {
	return newUsersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UsersTable with assigned table suffix
func (a UsersTable) WithSuffix(suffix string) *UsersTable {
	return newUsersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUsersTable(schemaName, tableName, alias string) *UsersTable {
	return &UsersTable{
		usersTable: newUsersTableImpl(schemaName, tableName, alias),
		NEW:        newUsersTableImpl("", "new", ""),
	}
}

func newUsersTableImpl(schemaName, tableName, alias string) usersTable {
	var (
		IDColumn               = mysql.IntegerColumn("id")
		AccountIDColumn        = mysql.IntegerColumn("account_id")
		RoleIDColumn           = mysql.IntegerColumn("role_id")
		NameColumn             = mysql.StringColumn("name")
		EmailColumn            = mysql.StringColumn("email")
		PhoneColumn            = mysql.StringColumn("phone")
		LoginColumn            = mysql.StringColumn("login")
		PasswordColumn         = mysql.StringColumn("password")
		EnabledColumn          = mysql.IntegerColumn("enabled")
		DateLastLoginColumn    = mysql.TimestampColumn("date_last_login")
		DateSendPasswordColumn = mysql.TimestampColumn("date_send_password")
		UserEditColumn         = mysql.IntegerColumn("user_edit")
		DateAddColumn          = mysql.TimestampColumn("date_add")
		DateEditColumn         = mysql.TimestampColumn("date_edit")
		SystemRoleIDColumn     = mysql.IntegerColumn("system_role_id")
		ReportsViewerColumn    = mysql.BoolColumn("reports_viewer")
		ReportsSettingsColumn  = mysql.StringColumn("reports_settings")
		allColumns             = mysql.ColumnList{IDColumn, AccountIDColumn, RoleIDColumn, NameColumn, EmailColumn, PhoneColumn, LoginColumn, PasswordColumn, EnabledColumn, DateLastLoginColumn, DateSendPasswordColumn, UserEditColumn, DateAddColumn, DateEditColumn, SystemRoleIDColumn, ReportsViewerColumn, ReportsSettingsColumn}
		mutableColumns         = mysql.ColumnList{AccountIDColumn, RoleIDColumn, NameColumn, EmailColumn, PhoneColumn, LoginColumn, PasswordColumn, EnabledColumn, DateLastLoginColumn, DateSendPasswordColumn, UserEditColumn, DateAddColumn, DateEditColumn, SystemRoleIDColumn, ReportsViewerColumn, ReportsSettingsColumn}
	)

	return usersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:               IDColumn,
		AccountID:        AccountIDColumn,
		RoleID:           RoleIDColumn,
		Name:             NameColumn,
		Email:            EmailColumn,
		Phone:            PhoneColumn,
		Login:            LoginColumn,
		Password:         PasswordColumn,
		Enabled:          EnabledColumn,
		DateLastLogin:    DateLastLoginColumn,
		DateSendPassword: DateSendPasswordColumn,
		UserEdit:         UserEditColumn,
		DateAdd:          DateAddColumn,
		DateEdit:         DateEditColumn,
		SystemRoleID:     SystemRoleIDColumn,
		ReportsViewer:    ReportsViewerColumn,
		ReportsSettings:  ReportsSettingsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
