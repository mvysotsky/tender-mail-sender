//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Subservice = newSubserviceTable("newtendex", "subservice", "")

type subserviceTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnInteger
	LanguageID   mysql.ColumnInteger
	CurrenciesID mysql.ColumnInteger
	IsDefault    mysql.ColumnInteger
	Name         mysql.ColumnString
	URL          mysql.ColumnString
	TimeZone     mysql.ColumnString
	Requisites   mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type SubserviceTable struct {
	subserviceTable

	NEW subserviceTable
}

// AS creates new SubserviceTable with assigned alias
func (a SubserviceTable) AS(alias string) *SubserviceTable {
	return newSubserviceTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SubserviceTable with assigned schema name
func (a SubserviceTable) FromSchema(schemaName string) *SubserviceTable {
	return newSubserviceTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SubserviceTable with assigned table prefix
func (a SubserviceTable) WithPrefix(prefix string) *SubserviceTable {
	return newSubserviceTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SubserviceTable with assigned table suffix
func (a SubserviceTable) WithSuffix(suffix string) *SubserviceTable {
	return newSubserviceTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSubserviceTable(schemaName, tableName, alias string) *SubserviceTable {
	return &SubserviceTable{
		subserviceTable: newSubserviceTableImpl(schemaName, tableName, alias),
		NEW:             newSubserviceTableImpl("", "new", ""),
	}
}

func newSubserviceTableImpl(schemaName, tableName, alias string) subserviceTable {
	var (
		IDColumn           = mysql.IntegerColumn("id")
		LanguageIDColumn   = mysql.IntegerColumn("language_id")
		CurrenciesIDColumn = mysql.IntegerColumn("currencies_id")
		IsDefaultColumn    = mysql.IntegerColumn("is_default")
		NameColumn         = mysql.StringColumn("name")
		URLColumn          = mysql.StringColumn("url")
		TimeZoneColumn     = mysql.StringColumn("time_zone")
		RequisitesColumn   = mysql.StringColumn("requisites")
		allColumns         = mysql.ColumnList{IDColumn, LanguageIDColumn, CurrenciesIDColumn, IsDefaultColumn, NameColumn, URLColumn, TimeZoneColumn, RequisitesColumn}
		mutableColumns     = mysql.ColumnList{LanguageIDColumn, CurrenciesIDColumn, IsDefaultColumn, NameColumn, URLColumn, TimeZoneColumn, RequisitesColumn}
	)

	return subserviceTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		LanguageID:   LanguageIDColumn,
		CurrenciesID: CurrenciesIDColumn,
		IsDefault:    IsDefaultColumn,
		Name:         NameColumn,
		URL:          URLColumn,
		TimeZone:     TimeZoneColumn,
		Requisites:   RequisitesColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
