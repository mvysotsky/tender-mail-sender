//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Resources = newResourcesTable("newtendex", "resources", "")

type resourcesTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	Name        mysql.ColumnString
	ParentID    mysql.ColumnInteger
	AliasCol    mysql.ColumnString
	Description mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ResourcesTable struct {
	resourcesTable

	NEW resourcesTable
}

// AS creates new ResourcesTable with assigned alias
func (a ResourcesTable) AS(alias string) *ResourcesTable {
	return newResourcesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ResourcesTable with assigned schema name
func (a ResourcesTable) FromSchema(schemaName string) *ResourcesTable {
	return newResourcesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ResourcesTable with assigned table prefix
func (a ResourcesTable) WithPrefix(prefix string) *ResourcesTable {
	return newResourcesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ResourcesTable with assigned table suffix
func (a ResourcesTable) WithSuffix(suffix string) *ResourcesTable {
	return newResourcesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newResourcesTable(schemaName, tableName, alias string) *ResourcesTable {
	return &ResourcesTable{
		resourcesTable: newResourcesTableImpl(schemaName, tableName, alias),
		NEW:            newResourcesTableImpl("", "new", ""),
	}
}

func newResourcesTableImpl(schemaName, tableName, alias string) resourcesTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		NameColumn        = mysql.StringColumn("name")
		ParentIDColumn    = mysql.IntegerColumn("parent_id")
		AliasColumn       = mysql.StringColumn("alias")
		DescriptionColumn = mysql.StringColumn("description")
		allColumns        = mysql.ColumnList{IDColumn, NameColumn, ParentIDColumn, AliasColumn, DescriptionColumn}
		mutableColumns    = mysql.ColumnList{NameColumn, ParentIDColumn, AliasColumn, DescriptionColumn}
	)

	return resourcesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Name:        NameColumn,
		ParentID:    ParentIDColumn,
		AliasCol:    AliasColumn,
		Description: DescriptionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
