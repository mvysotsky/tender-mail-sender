//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CategoriesRequiredDataFields = newCategoriesRequiredDataFieldsTable("newtendex", "categories_required_data_fields", "")

type categoriesRequiredDataFieldsTable struct {
	mysql.Table

	// Columns
	ID                 mysql.ColumnInteger
	CategoryID         mysql.ColumnInteger
	AccountDataFieldID mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type CategoriesRequiredDataFieldsTable struct {
	categoriesRequiredDataFieldsTable

	NEW categoriesRequiredDataFieldsTable
}

// AS creates new CategoriesRequiredDataFieldsTable with assigned alias
func (a CategoriesRequiredDataFieldsTable) AS(alias string) *CategoriesRequiredDataFieldsTable {
	return newCategoriesRequiredDataFieldsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CategoriesRequiredDataFieldsTable with assigned schema name
func (a CategoriesRequiredDataFieldsTable) FromSchema(schemaName string) *CategoriesRequiredDataFieldsTable {
	return newCategoriesRequiredDataFieldsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CategoriesRequiredDataFieldsTable with assigned table prefix
func (a CategoriesRequiredDataFieldsTable) WithPrefix(prefix string) *CategoriesRequiredDataFieldsTable {
	return newCategoriesRequiredDataFieldsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CategoriesRequiredDataFieldsTable with assigned table suffix
func (a CategoriesRequiredDataFieldsTable) WithSuffix(suffix string) *CategoriesRequiredDataFieldsTable {
	return newCategoriesRequiredDataFieldsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCategoriesRequiredDataFieldsTable(schemaName, tableName, alias string) *CategoriesRequiredDataFieldsTable {
	return &CategoriesRequiredDataFieldsTable{
		categoriesRequiredDataFieldsTable: newCategoriesRequiredDataFieldsTableImpl(schemaName, tableName, alias),
		NEW:                               newCategoriesRequiredDataFieldsTableImpl("", "new", ""),
	}
}

func newCategoriesRequiredDataFieldsTableImpl(schemaName, tableName, alias string) categoriesRequiredDataFieldsTable {
	var (
		IDColumn                 = mysql.IntegerColumn("id")
		CategoryIDColumn         = mysql.IntegerColumn("category_id")
		AccountDataFieldIDColumn = mysql.IntegerColumn("account_data_field_id")
		allColumns               = mysql.ColumnList{IDColumn, CategoryIDColumn, AccountDataFieldIDColumn}
		mutableColumns           = mysql.ColumnList{CategoryIDColumn, AccountDataFieldIDColumn}
	)

	return categoriesRequiredDataFieldsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		CategoryID:         CategoryIDColumn,
		AccountDataFieldID: AccountDataFieldIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
